<div class="auth-container">
    <div class="auth-card">
        <div class="text-center">
            <h1 class="h2 mb-4">Create an Account</h1>
        </div>
        <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
            <% errors.forEach(function(error) { %>
                <div class="alert alert-danger text-center" role="alert">
                    <%= error.msg %>
                </div>
            <% }); %>
        <% } %>

      <form action="/users/register" method="POST">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label for="firstName" class="form-label">First Name</label>
                    <input type="text" id="firstName" name="firstName" class="form-control form-control-lg" required>
                </div>
                <div class="col-md-6 mb-3">
                    <label for="lastName" class="form-label">Last Name</label>
                    <input type="text" id="lastName" name="lastName" class="form-control form-control-lg" required>
                </div>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input type="email" id="email" name="email" class="form-control form-control-lg" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" id="password" name="password" class="form-control form-control-lg" required>
                <ul class="password-criteria">
                    <li id="length-check"><span class="iconify"></span>At least 8 characters</li>
                    <li id="upper-check"><span class="iconify"></span>One uppercase letter</li>
                    <li id="lower-check"><span class="iconify"></span>One lowercase letter</li>
                    <li id="number-check"><span class="iconify"></span>One number</li>
                    <li id="special-check"><span class="iconify"></span>One special character</li>
                </ul>
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <input type="password" id="confirmPassword" name="confirmPassword" class="form-control form-control-lg" required>
            </div>

            <div class="d-grid mb-3">
                <button type="submit" class="btn btn-primary btn-lg">Create Account</button>
            </div>
        </form>

        <p class="text-center text-body-secondary mt-4">
            Already have an account? <a href="/users/login">Sign in</a>
        </p>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.getElementById('password');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const createAccountButton = document.querySelector('.btn-primary');
        const form = document.querySelector('form');

        const checks = {
            length: { el: document.getElementById('length-check'), regex: /.{8,}/ },
            upper: { el: document.getElementById('upper-check'), regex: /[A-Z]/ },
            lower: { el: document.getElementById('lower-check'), regex: /[a-z]/ },
            number: { el: document.getElementById('number-check'), regex: /[0-9]/ },
            special: { el: document.getElementById('special-check'), regex: /[!@#$%^&*()_\+\-=\[\]{};':"\\|,.<>\/?`~]/ }
        };

        const validatePasswordCriteria = () => {
            const password = passwordInput.value;
            let allCriteriaMet = true;
            for (const key in checks) {
                const check = checks[key];
                const icon = check.el.querySelector('.iconify');
                
                if (check.regex.test(password)) {
                    check.el.classList.remove('invalid');
                    check.el.classList.add('valid');
                    icon.dataset.icon = 'material-symbols:check-circle-outline-rounded';
                } else {
                    check.el.classList.remove('valid');
                    check.el.classList.add('invalid');
                    icon.dataset.icon = 'material-symbols:cancel-outline-rounded';
                    allCriteriaMet = false;
                }
            }
            return allCriteriaMet;
        };

        const validatePasswordsMatch = () => {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            return password === confirmPassword && password.length > 0;
        };

        const updateButtonState = () => {
            const passwordCriteriaMet = validatePasswordCriteria();
            const passwordsMatch = validatePasswordsMatch();
            
            if (passwordCriteriaMet && passwordsMatch) {
                createAccountButton.removeAttribute('disabled');
            } else {
                createAccountButton.setAttribute('disabled', 'disabled');
            }
        };

        passwordInput.addEventListener('input', updateButtonState);
        confirmPasswordInput.addEventListener('input', updateButtonState);
   
        updateButtonState();

        form.addEventListener('submit', function(event) {
            if (createAccountButton.hasAttribute('disabled')) {
                event.preventDefault();
            }
        });
    });
</script>